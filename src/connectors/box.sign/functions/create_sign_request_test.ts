/** This file was autogenerated. Follow the steps in src/schema/slack/functions/README.md to rebuild **/
import { assertEquals, assertExists } from "../../../dev_deps.ts";
import { DefineWorkflow } from "../../../dev_deps.ts";
import CreateSignRequest from "./create_sign_request.ts";

Deno.test("CreateSignRequest can be used as a Slack function in a workflow step", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_CreateSignRequest_slack_function",
    title: "Test CreateSignRequest",
    description: "This is a generated test to test CreateSignRequest",
  });
  testWorkflow.addStep(CreateSignRequest, {
    template: "test",
    parent_folder_id: "test",
    signer_email: "test",
    box_access_token: "test",
  });
  const actual = testWorkflow.steps[0].export();

  assertEquals(
    actual.function_id,
    "A05TC5525DZ#/functions/create_sign_request",
  );
  assertEquals(actual.inputs, {
    template: "test",
    parent_folder_id: "test",
    signer_email: "test",
    box_access_token: "test",
  });
});

Deno.test("All outputs of Slack function CreateSignRequest should exist", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_CreateSignRequest_slack_function",
    title: "Test CreateSignRequest",
    description: "This is a generated test to test CreateSignRequest",
  });
  const step = testWorkflow.addStep(CreateSignRequest, {
    template: "test",
    parent_folder_id: "test",
    signer_email: "test",
    box_access_token: "test",
  });
  assertExists(step.outputs.id);
  assertExists(step.outputs.email_message);
  assertExists(step.outputs.email_subject);
  assertExists(step.outputs.name);
  assertExists(step.outputs.status);
});
