/** This file was autogenerated. Follow the steps in src/schema/slack/functions/README.md to rebuild **/
import { assertEquals, assertExists } from "../../../dev_deps.ts";
import { DefineWorkflow } from "../../../dev_deps.ts";
import UpdateTicket from "./update_ticket.ts";

Deno.test("UpdateTicket can be used as a Slack function in a workflow step", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_UpdateTicket_slack_function",
    title: "Test UpdateTicket",
    description: "This is a generated test to test UpdateTicket",
  });
  testWorkflow.addStep(UpdateTicket, {
    ticket_id: "test",
    zendesk_access_token: "test",
  });
  const actual = testWorkflow.steps[0].export();

  assertEquals(actual.function_id, "A0660D0LBV3#/functions/update_ticket");
  assertEquals(actual.inputs, {
    ticket_id: "test",
    zendesk_access_token: "test",
  });
});

Deno.test("All outputs of Slack function UpdateTicket should exist", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_UpdateTicket_slack_function",
    title: "Test UpdateTicket",
    description: "This is a generated test to test UpdateTicket",
  });
  const step = testWorkflow.addStep(UpdateTicket, {
    ticket_id: "test",
    zendesk_access_token: "test",
  });
  assertExists(step.outputs.requester_id);
  assertExists(step.outputs.requester_email);
  assertExists(step.outputs.ticket_id);
  assertExists(step.outputs.ticket_url);
  assertExists(step.outputs.assignee_id);
  assertExists(step.outputs.priority);
});
