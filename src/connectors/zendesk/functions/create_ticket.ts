/** This file was autogenerated. Follow the steps in src/schema/slack/functions/README.md to rebuild **/
import { DefineConnector } from "../../../deps.ts";
import { Schema } from "../../../deps.ts";

export default DefineConnector({
  callback_id: "A0660D0LBV3#/functions/create_ticket",
  title: "Create a ticket",
  input_parameters: {
    properties: {
      requester_name: {
        type: Schema.types.string,
        description: "Enter text",
        title: "Requester name",
      },
      requester_email: {
        type: Schema.types.string,
        description: "Enter text",
        title: "Requester email",
      },
      assignee_id: { type: Schema.types.string, title: "Assignee" },
      group_id: { type: Schema.types.string, title: "Group" },
      followers: {
        type: Schema.types.array,
        description: "Enter internal agent emails",
        title: "Followers",
        items: { type: Schema.types.string },
      },
      cc_emails: {
        type: Schema.types.array,
        description: "Enter external email CCs",
        title: "Email CCs",
        items: { type: Schema.types.string },
      },
      subject: {
        type: Schema.types.string,
        description: "Enter text",
        title: "Ticket subject",
      },
      type: {
        type: Schema.types.string,
        title: "Ticket type",
        enum: ["problem", "incident", "question", "task"],
      },
      priority: {
        type: Schema.types.string,
        title: "Priority",
        enum: ["urgent", "high", "normal", "low"],
      },
      tags: {
        type: Schema.types.array,
        title: "Tags",
        items: { type: Schema.types.string },
      },
      reply_type: {
        type: Schema.types.string,
        title: "Reply type",
        enum: ["true", "false"],
      },
      comment: {
        type: Schema.types.string,
        description: "Enter text",
        title: "Comment",
      },
      status: {
        type: Schema.types.string,
        title: "Status",
        enum: ["new", "open", "pending", "hold", "solved", "closed"],
      },
      zendesk_access_token: {
        type: Schema.slack.types.oauth2,
        description: "Zendesk Credential to use",
        title: "Zendesk Access Token",
      },
    },
    required: ["comment", "zendesk_access_token"],
  },
  output_parameters: {
    properties: {
      requester_id: {
        type: Schema.types.integer,
        description: "The ticket's requester ID",
        title: "Requester ID",
      },
      requester_email: {
        type: Schema.types.string,
        description: "The ticket's requester email",
        title: "Requester email",
      },
      ticket_id: {
        type: Schema.types.integer,
        description: "The ticket ID",
        title: "Ticket ID",
      },
      ticket_url: {
        type: Schema.types.string,
        description: "The ticket URL",
        title: "Ticket URL",
      },
      assignee_id: {
        type: Schema.types.integer,
        description: "ID for the assigned user",
        title: "Assignee ID",
      },
      priority: {
        type: Schema.types.string,
        description: "Priority of the ticket",
        title: "Priority",
      },
    },
    required: ["ticket_id", "ticket_url"],
  },
});
