/** This file was autogenerated. Follow the steps in src/schema/slack/functions/README.md to rebuild **/
import { assertEquals, assertExists } from "../../../dev_deps.ts";
import { DefineWorkflow } from "../../../dev_deps.ts";
import AddTimeOffRequest from "./add_time_off_request.ts";

Deno.test("AddTimeOffRequest can be used as a Slack function in a workflow step", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_AddTimeOffRequest_slack_function",
    title: "Test AddTimeOffRequest",
    description: "This is a generated test to test AddTimeOffRequest",
  });
  testWorkflow.addStep(AddTimeOffRequest, {
    deel_access_token: "test",
    contract_id: "test",
    time_off_type: "test",
    start_date: "test",
    end_date: "test",
  });
  const actual = testWorkflow.steps[0].export();

  assertEquals(
    actual.function_id,
    "A061MGQNY2K#/functions/add_time_off_request",
  );
  assertEquals(actual.inputs, {
    deel_access_token: "test",
    contract_id: "test",
    time_off_type: "test",
    start_date: "test",
    end_date: "test",
  });
});

Deno.test("All outputs of Slack function AddTimeOffRequest should exist", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_AddTimeOffRequest_slack_function",
    title: "Test AddTimeOffRequest",
    description: "This is a generated test to test AddTimeOffRequest",
  });
  const step = testWorkflow.addStep(AddTimeOffRequest, {
    deel_access_token: "test",
    contract_id: "test",
    time_off_type: "test",
    start_date: "test",
    end_date: "test",
  });
  assertExists(step.outputs.request_id);
  assertExists(step.outputs.status);
});
