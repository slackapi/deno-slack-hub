/** This file was autogenerated. Follow the steps in src/schema/slack/functions/README.md to rebuild **/
import { assertEquals, assertExists } from "../../../dev_deps.ts";
import { DefineWorkflow } from "../../../dev_deps.ts";
import CreateTicket from "./create_ticket.ts";

Deno.test("CreateTicket can be used as a Slack function in a workflow step", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_CreateTicket_slack_function",
    title: "Test CreateTicket",
    description: "This is a generated test to test CreateTicket",
  });
  testWorkflow.addStep(CreateTicket, {
    title: "test",
    description: "test",
    ticket_type_id: "test",
    contact_email: "test",
    intercom_access_token: "test",
  });
  const actual = testWorkflow.steps[0].export();

  assertEquals(actual.function_id, "A05S4UJGUQK#/functions/create_ticket");
  assertEquals(actual.inputs, {
    title: "test",
    description: "test",
    ticket_type_id: "test",
    contact_email: "test",
    intercom_access_token: "test",
  });
});

Deno.test("All outputs of Slack function CreateTicket should exist", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_CreateTicket_slack_function",
    title: "Test CreateTicket",
    description: "This is a generated test to test CreateTicket",
  });
  const step = testWorkflow.addStep(CreateTicket, {
    title: "test",
    description: "test",
    ticket_type_id: "test",
    contact_email: "test",
    intercom_access_token: "test",
  });
  assertExists(step.outputs.ticket_id);
  assertExists(step.outputs.title);
  assertExists(step.outputs.description);
  assertExists(step.outputs.ticket_type);
});
