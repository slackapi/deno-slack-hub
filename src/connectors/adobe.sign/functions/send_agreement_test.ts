/** This file was autogenerated. Follow the steps in src/schema/slack/functions/README.md to rebuild **/
import { assertEquals, assertExists } from "../../../dev_deps.ts";
import { DefineWorkflow } from "../../../dev_deps.ts";
import SendAgreement from "./send_agreement.ts";

Deno.test("SendAgreement can be used as a Slack function in a workflow step", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_SendAgreement_slack_function",
    title: "Test SendAgreement",
    description: "This is a generated test to test SendAgreement",
  });
  testWorkflow.addStep(SendAgreement, {
    adobe_sign_access_token: "test",
    template_id: "test",
    recipient_name: "test",
    recipient_email: "test",
    agreement_name: "test",
  });
  const actual = testWorkflow.steps[0].export();

  assertEquals(actual.function_id, "A05S5D4750A#/functions/send_agreement");
  assertEquals(actual.inputs, {
    adobe_sign_access_token: "test",
    template_id: "test",
    recipient_name: "test",
    recipient_email: "test",
    agreement_name: "test",
  });
});

Deno.test("All outputs of Slack function SendAgreement should exist", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_SendAgreement_slack_function",
    title: "Test SendAgreement",
    description: "This is a generated test to test SendAgreement",
  });
  const step = testWorkflow.addStep(SendAgreement, {
    adobe_sign_access_token: "test",
    template_id: "test",
    recipient_name: "test",
    recipient_email: "test",
    agreement_name: "test",
  });
  assertExists(step.outputs.agreement_id);
});
