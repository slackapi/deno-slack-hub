/** This file was autogenerated. Follow the steps in src/schema/slack/functions/README.md to rebuild **/
import { assertEquals, assertExists } from "../../../dev_deps.ts";
import { DefineWorkflow } from "../../../dev_deps.ts";
import UpdateIncident from "./update_incident.ts";

Deno.test("UpdateIncident can be used as a Slack function in a workflow step", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_UpdateIncident_slack_function",
    title: "Test UpdateIncident",
    description: "This is a generated test to test UpdateIncident",
  });
  testWorkflow.addStep(UpdateIncident, {
    incident_number: "test",
    servicenow_access_token: "test",
  });
  const actual = testWorkflow.steps[0].export();

  assertEquals(actual.function_id, "A07AYPT9X4P#/functions/update_incident");
  assertEquals(actual.inputs, {
    incident_number: "test",
    servicenow_access_token: "test",
  });
});

Deno.test("All outputs of Slack function UpdateIncident should exist", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_UpdateIncident_slack_function",
    title: "Test UpdateIncident",
    description: "This is a generated test to test UpdateIncident",
  });
  const step = testWorkflow.addStep(UpdateIncident, {
    incident_number: "test",
    servicenow_access_token: "test",
  });
  assertExists(step.outputs.incident_id);
  assertExists(step.outputs.incident_url);
  assertExists(step.outputs.incident_number);
  assertExists(step.outputs.timestamp_started);
  assertExists(step.outputs.timestamp_completed);
});
