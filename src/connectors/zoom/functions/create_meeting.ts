/** This file was autogenerated. Follow the steps in src/schema/slack/functions/README.md to rebuild **/
import { DefineConnector } from "../../../deps.ts";
import { Schema } from "../../../deps.ts";

export default DefineConnector({
  callback_id: "A04S9208DRQ#/functions/create_meeting",
  title: "Create a meeting",
  description: "Create a Zoom meeting",
  input_parameters: {
    properties: {
      topic: {
        type: Schema.types.string,
        description: "Enter a meeting title...",
        title: "Meeting title",
      },
      agenda: {
        type: Schema.types.string,
        description: "Enter an agenda...",
        title: "Agenda",
      },
      invitees: {
        type: Schema.types.array,
        description: "Search all people...",
        title: "Invitees",
        items: { type: Schema.slack.types.user_id },
      },
      zoom_access_token: {
        type: Schema.slack.types.oauth2,
        title: "Zoom access token",
      },
    },
    required: ["topic", "invitees", "zoom_access_token"],
  },
  output_parameters: {
    properties: {
      meeting_id: {
        type: Schema.types.number,
        description: "Meeting ID",
        title: "Meeting ID",
      },
      topic: {
        type: Schema.types.string,
        description: "Topic of the meeting",
        title: "Meeting title",
      },
      agenda: {
        type: Schema.types.string,
        description: "agenda",
        title: "Agenda",
      },
      host_email: {
        type: Schema.types.string,
        description: "Email of the meeting's host",
        title: "Host email",
      },
      start_url: {
        type: Schema.types.string,
        description: "Start url",
        title: "Start URL",
      },
      join_url: {
        type: Schema.types.string,
        description: "Join url",
        title: "Join URL",
      },
      invitees: {
        type: Schema.types.array,
        description: "Meeting Invitees",
        title: "Invitees",
        items: { type: Schema.slack.types.user_id },
      },
      invitee_emails: {
        type: Schema.types.array,
        description: "Emails of the Invitees with comma separated",
        title: "Invitee emails",
        items: { type: Schema.types.string },
      },
    },
    required: [],
  },
});
