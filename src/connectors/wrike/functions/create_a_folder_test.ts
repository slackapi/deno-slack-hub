/** This file was autogenerated. Follow the steps in src/schema/slack/functions/README.md to rebuild **/
import { assertEquals, assertExists } from "../../../dev_deps.ts";
import { DefineWorkflow } from "../../../dev_deps.ts";
import CreateAFolder from "./create_a_folder.ts";

Deno.test("CreateAFolder can be used as a Slack function in a workflow step", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_CreateAFolder_slack_function",
    title: "Test CreateAFolder",
    description: "This is a generated test to test CreateAFolder",
  });
  testWorkflow.addStep(CreateAFolder, {
    folder: "test",
    title: "test",
    wrike_access_token: "test",
  });
  const actual = testWorkflow.steps[0].export();

  assertEquals(actual.function_id, "A05MDPYMGJC#/functions/create_a_folder");
  assertEquals(actual.inputs, {
    folder: "test",
    title: "test",
    wrike_access_token: "test",
  });
});

Deno.test("All outputs of Slack function CreateAFolder should exist", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_CreateAFolder_slack_function",
    title: "Test CreateAFolder",
    description: "This is a generated test to test CreateAFolder",
  });
  const step = testWorkflow.addStep(CreateAFolder, {
    folder: "test",
    title: "test",
    wrike_access_token: "test",
  });
  assertExists(step.outputs.folder_id);
  assertExists(step.outputs.account_id);
  assertExists(step.outputs.title);
  assertExists(step.outputs.description);
  assertExists(step.outputs.created_date);
  assertExists(step.outputs.updated_date);
});
