/** This file was autogenerated. Follow the steps in src/schema/slack/functions/README.md to rebuild **/
import { DefineConnector } from "../../../deps.ts";
import { Schema } from "../../../deps.ts";

export default DefineConnector({
  callback_id: "A05MDPYMGJC#/functions/update_a_task",
  title: "Update a task",
  input_parameters: {
    properties: {
      task: { type: Schema.types.string, title: "Task" },
      status: {
        type: Schema.types.string,
        title: "Status",
        enum: ["Active", "Completed", "Deferred", "Cancelled"],
      },
      title: {
        type: Schema.types.string,
        description: "Enter text",
        title: "Title",
      },
      description: {
        type: Schema.types.string,
        description: "Enter text",
        title: "Description",
      },
      importance: {
        type: Schema.types.string,
        title: "Importance",
        enum: ["High", "Normal", "Low"],
      },
      add_assignees: {
        type: Schema.types.array,
        title: "Add Assignees",
        items: { type: Schema.types.string },
      },
      wrike_access_token: {
        type: Schema.slack.types.oauth2,
        description: "Wrike credential to use",
        title: "Wrike Access Token",
      },
    },
    required: ["task", "wrike_access_token"],
  },
  output_parameters: {
    properties: {
      task_id: {
        type: Schema.types.string,
        description: "The ID of the task",
        title: "Task ID",
      },
      account_id: {
        type: Schema.types.string,
        description: "The ID of the account",
        title: "Account ID",
      },
      title: {
        type: Schema.types.string,
        description: "The title of the task",
        title: "Title",
      },
      status: {
        type: Schema.types.string,
        description: "The status of the task",
        title: "Status",
      },
      assignees: {
        type: Schema.types.array,
        description: "The people assigned to the task",
        title: "Assignees",
        items: { type: Schema.types.string },
      },
    },
    required: [],
  },
});
