/** This file was autogenerated. Follow the steps in src/schema/slack/functions/README.md to rebuild **/
import { assertEquals, assertExists } from "../../../dev_deps.ts";
import { DefineWorkflow } from "../../../dev_deps.ts";
import UpdateWorksheetRow from "./update_worksheet_row.ts";

Deno.test("UpdateWorksheetRow can be used as a Slack function in a workflow step", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_UpdateWorksheetRow_slack_function",
    title: "Test UpdateWorksheetRow",
    description: "This is a generated test to test UpdateWorksheetRow",
  });
  testWorkflow.addStep(UpdateWorksheetRow, {
    workbook: "test",
    worksheet_name: "test",
    column_name: "test",
    cell_value: "test",
    excel_access_token: "test",
    updated_values: "test",
  });
  const actual = testWorkflow.steps[0].export();

  assertEquals(
    actual.function_id,
    "A05UVANN1S4#/functions/update_worksheet_row",
  );
  assertEquals(actual.inputs, {
    workbook: "test",
    worksheet_name: "test",
    column_name: "test",
    cell_value: "test",
    excel_access_token: "test",
    updated_values: "test",
  });
});

Deno.test("All outputs of Slack function UpdateWorksheetRow should exist", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_UpdateWorksheetRow_slack_function",
    title: "Test UpdateWorksheetRow",
    description: "This is a generated test to test UpdateWorksheetRow",
  });
  const step = testWorkflow.addStep(UpdateWorksheetRow, {
    workbook: "test",
    worksheet_name: "test",
    column_name: "test",
    cell_value: "test",
    excel_access_token: "test",
    updated_values: "test",
  });
  assertExists(step.outputs.worksheet_url);
  assertExists(step.outputs.worksheet_name);
  assertExists(step.outputs.row_id);
  assertExists(step.outputs.column_values);
});
