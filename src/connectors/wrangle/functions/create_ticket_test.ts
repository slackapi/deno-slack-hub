/** This file was autogenerated. Follow the steps in src/schema/slack/functions/README.md to rebuild **/
import { assertEquals, assertExists } from "../../../dev_deps.ts";
import { DefineWorkflow } from "../../../dev_deps.ts";
import CreateTicket from "./create_ticket.ts";

Deno.test("CreateTicket can be used as a Slack function in a workflow step", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_CreateTicket_slack_function",
    title: "Test CreateTicket",
    description: "This is a generated test to test CreateTicket",
  });
  testWorkflow.addStep(CreateTicket, {
    inbox_id: "test",
    requester_id: "test",
    ticket_name: "test",
    user_context: "test",
  });
  const actual = testWorkflow.steps[0].export();

  assertEquals(actual.function_id, "A07T6LETA9Z#/functions/create_ticket");
  assertEquals(actual.inputs, {
    inbox_id: "test",
    requester_id: "test",
    ticket_name: "test",
    user_context: "test",
  });
});

Deno.test("All outputs of Slack function CreateTicket should exist", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_CreateTicket_slack_function",
    title: "Test CreateTicket",
    description: "This is a generated test to test CreateTicket",
  });
  const step = testWorkflow.addStep(CreateTicket, {
    inbox_id: "test",
    requester_id: "test",
    ticket_name: "test",
    user_context: "test",
  });
  assertExists(step.outputs.ticket_id);
  assertExists(step.outputs.ticket_name);
  assertExists(step.outputs.ticket_number);
  assertExists(step.outputs.ticket_description);
  assertExists(step.outputs.slack_message_url);
  assertExists(step.outputs.priority);
  assertExists(step.outputs.inbox_id);
  assertExists(step.outputs.date_created);
});
