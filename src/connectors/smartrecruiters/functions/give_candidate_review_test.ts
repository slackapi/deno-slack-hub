/** This file was autogenerated. Follow the steps in src/schema/slack/functions/README.md to rebuild **/
import { assertEquals, assertExists } from "../../../dev_deps.ts";
import { DefineWorkflow } from "../../../dev_deps.ts";
import GiveCandidateReview from "./give_candidate_review.ts";

Deno.test("GiveCandidateReview can be used as a Slack function in a workflow step", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_GiveCandidateReview_slack_function",
    title: "Test GiveCandidateReview",
    description: "This is a generated test to test GiveCandidateReview",
  });
  testWorkflow.addStep(GiveCandidateReview, {
    reviewer_id: "test",
    job_id: "test",
    candidate_id: "test",
    rating: "test",
  });
  const actual = testWorkflow.steps[0].export();

  assertEquals(
    actual.function_id,
    "A05UG19KZ3K#/functions/give_candidate_review",
  );
  assertEquals(actual.inputs, {
    reviewer_id: "test",
    job_id: "test",
    candidate_id: "test",
    rating: "test",
  });
});

Deno.test("All outputs of Slack function GiveCandidateReview should exist", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_GiveCandidateReview_slack_function",
    title: "Test GiveCandidateReview",
    description: "This is a generated test to test GiveCandidateReview",
  });
  const step = testWorkflow.addStep(GiveCandidateReview, {
    reviewer_id: "test",
    job_id: "test",
    candidate_id: "test",
    rating: "test",
  });
  assertExists(step.outputs.candidate_id);
  assertExists(step.outputs.job_id);
  assertExists(step.outputs.rating);
  assertExists(step.outputs.comment);
  assertExists(step.outputs.review_id);
});
