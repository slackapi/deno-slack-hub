/** This file was autogenerated. Follow the steps in src/schema/slack/functions/README.md to rebuild **/
import { assertEquals, assertExists } from "../../../dev_deps.ts";
import { DefineWorkflow } from "../../../dev_deps.ts";
import EditIssue from "./edit_issue.ts";

Deno.test("EditIssue can be used as a Slack function in a workflow step", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_EditIssue_slack_function",
    title: "Test EditIssue",
    description: "This is a generated test to test EditIssue",
  });
  testWorkflow.addStep(EditIssue, {
    atlassian_access_token: "test",
    jira_domain: "test",
    project: "test",
    issue_id: "test",
    summary: "test",
  });
  const actual = testWorkflow.steps[0].export();

  assertEquals(actual.function_id, "A04T6GE3LEB#/functions/edit_issue");
  assertEquals(actual.inputs, {
    atlassian_access_token: "test",
    jira_domain: "test",
    project: "test",
    issue_id: "test",
    summary: "test",
  });
});

Deno.test("All outputs of Slack function EditIssue should exist", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_EditIssue_slack_function",
    title: "Test EditIssue",
    description: "This is a generated test to test EditIssue",
  });
  const step = testWorkflow.addStep(EditIssue, {
    atlassian_access_token: "test",
    jira_domain: "test",
    project: "test",
    issue_id: "test",
    summary: "test",
  });
  assertExists(step.outputs.response);
  assertExists(step.outputs.project);
  assertExists(step.outputs.issue_id);
  assertExists(step.outputs.summary);
  assertExists(step.outputs.description);
});
