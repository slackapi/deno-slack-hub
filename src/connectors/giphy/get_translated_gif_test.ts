/** This file was autogenerated. Follow the steps in src/schema/slack/functions/README.md to rebuild **/
import { assertEquals, assertExists } from "../../dev_deps.ts";
import { DefineWorkflow } from "../../dev_deps.ts";
import { ManifestFunctionSchema } from "../../dev_deps.ts";
import { Schema } from "../../deps.ts";
import GetTranslatedGif from "./get_translated_gif.ts";

Deno.test("GetTranslatedGif generates valid FunctionManifest", () => {
  assertEquals(
    GetTranslatedGif.definition.callback_id,
    "slack#/functions/get_translated_gif",
  );
  const expected: ManifestFunctionSchema = {
    source_file: "",
    title: "Convert words to GIF",
    description:
      "GIPHY Translate converts words and phrases to the perfect GIF using GIPHY's special sauce algorithm",
    input_parameters: {
      properties: {
        search_term: {
          type: Schema.types.string,
          description: "Search query term or phrase",
          title: "Search term",
        },
        weirdness: {
          type: Schema.types.integer,
          description:
            "Value from 0-10 which makes results weirder as you go up the scale",
          title: "Weirdness",
        },
      },
      required: ["search_term"],
    },
    output_parameters: {
      properties: {
        web_url: {
          type: Schema.types.string,
          description: "A link to this GIF on giphy.com",
          title: "Web URL",
        },
        gif_url: {
          type: Schema.types.string,
          description:
            "The URL for the original version of this GIF that can be used for unfurling in Slack",
          title: "GIF URL",
        },
        title: {
          type: Schema.types.string,
          description: "The title of this GIF",
          title: "Title",
        },
      },
      required: ["web_url", "gif_url"],
    },
  };
  const actual = GetTranslatedGif.export();

  assertEquals(actual, expected);
});

Deno.test("GetTranslatedGif can be used as a Slack function in a workflow step", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_GetTranslatedGif_slack_function",
    title: "Test GetTranslatedGif",
    description: "This is a generated test to test GetTranslatedGif",
  });
  testWorkflow.addStep(GetTranslatedGif, { search_term: "test" });
  const actual = testWorkflow.steps[0].export();

  assertEquals(actual.function_id, "slack#/functions/get_translated_gif");
  assertEquals(actual.inputs, { search_term: "test" });
});

Deno.test("All outputs of Slack function GetTranslatedGif should exist", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_GetTranslatedGif_slack_function",
    title: "Test GetTranslatedGif",
    description: "This is a generated test to test GetTranslatedGif",
  });
  const step = testWorkflow.addStep(GetTranslatedGif, { search_term: "test" });
  assertExists(step.outputs.web_url);
  assertExists(step.outputs.gif_url);
  assertExists(step.outputs.title);
});
