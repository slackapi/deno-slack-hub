/** This file was autogenerated. Follow the steps in src/schema/slack/functions/README.md to rebuild **/
import { assertEquals, assertExists } from "../../../dev_deps.ts";
import { DefineWorkflow } from "../../../dev_deps.ts";
import CreateSpendRequest from "./create_spend_request.ts";

Deno.test("CreateSpendRequest can be used as a Slack function in a workflow step", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_CreateSpendRequest_slack_function",
    title: "Test CreateSpendRequest",
    description: "This is a generated test to test CreateSpendRequest",
  });
  testWorkflow.addStep(CreateSpendRequest, {
    display_name: "test",
    description: "test",
    icon: "test",
    primary_card_enabled: "test",
    reimbursements_enabled: "test",
    amount_limit: "test",
    interval: "test",
    ramp_access_token: "test",
  });
  const actual = testWorkflow.steps[0].export();

  assertEquals(
    actual.function_id,
    "A066PC9JKJ7#/functions/create_spend_request",
  );
  assertEquals(actual.inputs, {
    display_name: "test",
    description: "test",
    icon: "test",
    primary_card_enabled: "test",
    reimbursements_enabled: "test",
    amount_limit: "test",
    interval: "test",
    ramp_access_token: "test",
  });
});

Deno.test("All outputs of Slack function CreateSpendRequest should exist", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_CreateSpendRequest_slack_function",
    title: "Test CreateSpendRequest",
    description: "This is a generated test to test CreateSpendRequest",
  });
  const step = testWorkflow.addStep(CreateSpendRequest, {
    display_name: "test",
    description: "test",
    icon: "test",
    primary_card_enabled: "test",
    reimbursements_enabled: "test",
    amount_limit: "test",
    interval: "test",
    ramp_access_token: "test",
  });
  assertExists(step.outputs.spend_id);
  assertExists(step.outputs.spend_program_url);
});
