/** This file was autogenerated. Follow the steps in src/schema/slack/functions/README.md to rebuild **/
import { assertEquals, assertExists } from "../../../dev_deps.ts";
import { DefineWorkflow } from "../../../dev_deps.ts";
import SendSignatureRequestWithTemplate from "./send_signature_request_with_template.ts";

Deno.test("SendSignatureRequestWithTemplate can be used as a Slack function in a workflow step", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_SendSignatureRequestWithTemplate_slack_function",
    title: "Test SendSignatureRequestWithTemplate",
    description:
      "This is a generated test to test SendSignatureRequestWithTemplate",
  });
  testWorkflow.addStep(SendSignatureRequestWithTemplate, {
    template_id: "test",
    signer_role: "test",
    signer_name: "test",
    signer_email_address: "test",
    dropbox_sign_access_token: "test",
  });
  const actual = testWorkflow.steps[0].export();

  assertEquals(
    actual.function_id,
    "A060Q1RQSCE#/functions/send_signature_request_with_template",
  );
  assertEquals(actual.inputs, {
    template_id: "test",
    signer_role: "test",
    signer_name: "test",
    signer_email_address: "test",
    dropbox_sign_access_token: "test",
  });
});

Deno.test("All outputs of Slack function SendSignatureRequestWithTemplate should exist", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_SendSignatureRequestWithTemplate_slack_function",
    title: "Test SendSignatureRequestWithTemplate",
    description:
      "This is a generated test to test SendSignatureRequestWithTemplate",
  });
  const step = testWorkflow.addStep(SendSignatureRequestWithTemplate, {
    template_id: "test",
    signer_role: "test",
    signer_name: "test",
    signer_email_address: "test",
    dropbox_sign_access_token: "test",
  });
  assertExists(step.outputs.signature_request_id);
  assertExists(step.outputs.title);
  assertExists(step.outputs.subject);
  assertExists(step.outputs.message);
  assertExists(step.outputs.signing_url);
  assertExists(step.outputs.details_url);
  assertExists(step.outputs.signer_name);
  assertExists(step.outputs.signer_email_address);
});
